SELECT Name FROM tracks;
SELECT Name, Composer FROM tracks;
SELECT AlbumId, Title, ArtistId FROM albums;
SELECT * FROM tracks;
SELECT DISTINCT Composer FROM tracks;
SELECT DISTINCT AlbumId, MediaTypeId FROM tracks;
SELECT Name FROM tracks WHERE Composer = 'Jimi Hendrix';
SELECT * FROM invoices WHERE total > 10;
SELECT * FROM invoices WHERE total > 10 LIMIT 4; 

SELECT * 
FROM invoices 
WHERE total>10 
ORDER BY Total 
DESC;

SELECT * FROM invoices WHERE NOT  BillingCountry = 'USA' ORDER BY Total ASC;

SELECT * FROM invoices WHERE   BillingCountry <> 'USA' ORDER BY Total ASC;
--COMMENT


SELECT * FROM company.employees;
-- ATTACH EDILEN BIR DATABASE'DEN QUERY YAPILDIGINDA BU SEKILDE KULLANIYORUZ.

--date: 2009-01-12'de 12 ocak'ı dikkate almıyor. 
--11 ocak'a kadar olan değerleri veriyor. 
--datetime eklerseniz zaten saat belirlediğiniz için o saate kadar dikkate alıyor.

--Normalde between komutu yazdiginiz araligin hem ilk degerini hem son degerini aliyor. 
--Ancak tarih saatte soyle bir husus var:
--gunler icinsaat olarak 00:00:00 i baz aliyor. 
--ornegin gecen pazar dan (2020-07-05) bu pazara (2020-07-12) aralik verirsek
--(bugun 00:00:00  a kadar alacagi icin) dogal olarak bugune kadarki verileri getirir. 
--bugunu dahil etmez

SELECT FirstName, LastName 
FROM customers 
WHERE COUNTRY IN ('Belgium', 'Norway', 'Canada', 'USA')
ORDER BY Country;

--LIKE 
-- SELECT *
-- FROM sudent_info 
-- where county LIKE 'Wo%';
-- 
-- SELECT *
-- FROM sudent_info 
-- where field LIKE '%Developer';

SELECT first_name
FROM company.employees 
where first_name LIKE 'El_is';

SELECT Name
FROM tracks
where composer LIKE '%Bach';

--COUNT 

-- SELECT COUNT(column_name)
-- FROM table
-- Null olan hucreleri saymaz, duplicateleri sayar.
--COUNT(*) null olanlari da sayar

SELECT COUNT(TrackId)
FROM tracks;

--AS (Alias)

SELECT COUNT(TrackId) AS count_of_tracks
FROM tracks;

SELECT Count(DISTINCT composer) 
FROM tracks;

SELECT COUNT(DISTINCT Composer) AS number_of_composers
FROM tracks ;

--MIN 

-- SELECT MIN(salary) AS lowest_salary
-- FROM employees;

-- SELECT MIN(hire_date) AS earliest_date
-- FROM employees;

SELECT MIN(Milliseconds) AS Shortest_Track
FROM tracks;

--MAX 

SELECT MAX(Milliseconds) AS 'Longest_Track'
FROM tracks;

SELECT MIN(Milliseconds) AS Shortest_Track, MAX(Milliseconds) AS Longest_Track
FROM tracks;

--What is the name of the longest track?
SELECT Name, MAX(Milliseconds) AS 'Longest Track'
FROM tracks;
-- AS ile tek kelime kullaniliyorsa "" gerek yok.


--SUM 

SELECT SUM(Total) AS Total_Income 
FROM invoices;


--AVG 
--Null'u ignore eder

SELECT AVG(Milliseconds) AS "Avarage track duration"
FROM tracks;

--quest

SELECT * 
FROM tracks
WHERE Name LIKE "%love%"
LIMIT 5;








